@page
@model SharingMezzi.Web.Pages.ParkingModel
@using SharingMezzi.Web.Models
@{
    ViewData["Title"] = "Parcheggi";
}

<div class="page-header">
    <h1 class="page-title">Parcheggi</h1>
    <p class="page-subtitle">Trova i parcheggi disponibili nelle vicinanze</p>
</div>

<!-- Map View -->
<div class="card mb-4">
    <div class="card-header">
        <h5 class="mb-0">
            <i class="fas fa-map-marked-alt text-primary"></i>
            Mappa Parcheggi
        </h5>
    </div>
    <div class="card-body">
        <div id="parkingMap" style="height: 400px; background: #f8f9fa; border-radius: 8px; display: flex; align-items: center; justify-content: center;">
            <div class="text-center">
                <i class="fas fa-map fa-3x text-muted mb-3"></i>
                <p class="text-muted">Mappa OpenStreetMap con parcheggi disponibili</p>
                <small class="text-muted">Integrazione con OpenStreetMap per visualizzare i parcheggi</small>
            </div>
        </div>
    </div>
</div>

<!-- Parking List -->
<div class="row">
    @if (Model.Parkings.Any())
    {
        @foreach (var parking in Model.Parkings)
        {
            <div class="col-lg-6 col-xl-4 mb-4">
                <div class="card h-100">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            <h5 class="card-title">
                                <i class="fas fa-parking text-primary me-2"></i>
                                @parking.Nome
                            </h5>
                            <span class="badge @(parking.PostiLiberi > 0 ? "bg-success" : "bg-danger")">
                                @parking.PostiLiberi/@parking.Capienza
                            </span>
                        </div>

                        <div class="parking-details">
                            <div class="mb-3">
                                <small class="text-muted">Indirizzo:</small>
                                <div class="fw-bold">
                                    <i class="fas fa-map-marker-alt text-danger me-1"></i>
                                    @parking.Indirizzo
                                </div>
                            </div>

                            <div class="row mb-3">
                                <div class="col-4">
                                    <small class="text-muted">Capienza</small>
                                    <div class="fw-bold">@parking.Capienza</div>
                                </div>
                                <div class="col-4">
                                    <small class="text-muted">Liberi</small>
                                    <div class="fw-bold text-success">@parking.PostiLiberi</div>
                                </div>
                                <div class="col-4">
                                    <small class="text-muted">Occupati</small>
                                    <div class="fw-bold text-warning">@parking.PostiOccupati</div>
                                </div>
                            </div>

                            <div class="progress mb-3">
                                <div class="progress-bar @(parking.PostiLiberi > parking.Capienza * 0.5 ? "bg-success" : parking.PostiLiberi > parking.Capienza * 0.2 ? "bg-warning" : "bg-danger")" 
                                     role="progressbar" 
                                     style="width: @(parking.PostiLiberi * 100.0 / parking.Capienza)%">
                                    @Math.Round(parking.PostiLiberi * 100.0 / parking.Capienza, 1)%
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="d-flex gap-2">
                            <button class="btn btn-primary btn-sm flex-fill" onclick="viewParkingDetails(@parking.Id)">
                                <i class="fas fa-info-circle"></i> Dettagli
                            </button>
                            <button class="btn btn-outline-success btn-sm flex-fill" onclick="showDirections(@parking.Id)">
                                <i class="fas fa-directions"></i> Indicazioni
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="col-12">
            <div class="card">
                <div class="card-body text-center py-5">
                    <i class="fas fa-parking fa-3x text-muted mb-3"></i>
                    <h4>Nessun parcheggio disponibile</h4>
                    <p class="text-muted">Non ci sono parcheggi disponibili in questo momento.</p>
                    <button class="btn btn-primary" onclick="window.location.reload()">
                        <i class="fas fa-sync-alt"></i> Aggiorna Lista
                    </button>
                </div>
            </div>
        </div>
    }
</div>

<!-- Parking Details Modal -->
<div class="modal fade" id="parkingDetailsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Dettagli Parcheggio</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="parkingDetailsContent">
                <!-- Parking details will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Chiudi</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            initializeParkingMap();
            // Auto-refresh every 2 minutes
            setInterval(() => window.location.reload(), 120000);
        });

        function initializeParkingMap() {
            const mapElement = document.getElementById('parkingMap');
            setTimeout(() => {
                mapElement.innerHTML = `
                    <div class="text-center">
                        <i class="fas fa-map fa-3x text-primary mb-3"></i>
                        <p class="text-primary">Mappa OpenStreetMap</p>
                        <small class="text-muted">Qui verranno mostrati i parcheggi sulla mappa interattiva</small>
                    </div>
                `;
            }, 2000);
        }

        async function viewParkingDetails(parkingId) {
            const modal = new bootstrap.Modal(document.getElementById('parkingDetailsModal'));
            const content = document.getElementById('parkingDetailsContent');
            
            content.innerHTML = '<div class="text-center"><div class="spinner"></div> Caricamento...</div>';
            modal.show();

            try {
                const response = await fetch(`/api/parking/${parkingId}`, {
                    headers: {
                        'Authorization': `Bearer ${app.getToken()}`
                    }
                });

                if (response.ok) {
                    const parking = await response.json();
                    
                    // Get parking slots
                    const slotsResponse = await fetch(`/api/parking/${parkingId}/slots`, {
                        headers: {
                            'Authorization': `Bearer ${app.getToken()}`
                        }
                    });

                    let slotsHtml = '';
                    if (slotsResponse.ok) {
                        const slots = await slotsResponse.json();
                        slotsHtml = `
                            <div class="row">
                                ${slots.map(slot => `
                                    <div class="col-md-2 col-sm-3 col-4 mb-2">
                                        <div class="text-center p-2 border rounded ${slot.stato === 0 ? 'bg-light-success' : slot.stato === 1 ? 'bg-light-warning' : 'bg-light-danger'}">
                                            <small class="fw-bold">${slot.numero}</small>
                                            <div class="small">
                                                ${slot.stato === 0 ? 'Libero' : slot.stato === 1 ? 'Occupato' : 'Fuori servizio'}
                                            </div>
                                        </div>
                                    </div>
                                `).join('')}
                            </div>
                        `;
                    }

                    content.innerHTML = `
                        <div class="parking-details-full">
                            <h5>${parking.nome}</h5>
                            <div class="row mb-4">
                                <div class="col-md-6">
                                    <p><strong>Indirizzo:</strong> ${parking.indirizzo}</p>
                                    <p><strong>Capienza totale:</strong> ${parking.capienza} posti</p>
                                    <p><strong>Posti liberi:</strong> ${parking.postiLiberi}</p>
                                    <p><strong>Posti occupati:</strong> ${parking.postiOccupati}</p>
                                </div>
                                <div class="col-md-6">
                                    <div class="parking-status">
                                        <div class="progress mb-2">
                                            <div class="progress-bar ${parking.postiLiberi > parking.capienza * 0.5 ? 'bg-success' : parking.postiLiberi > parking.capienza * 0.2 ? 'bg-warning' : 'bg-danger'}" 
                                                 style="width: ${parking.postiLiberi * 100.0 / parking.capienza}%">
                                                ${Math.round(parking.postiLiberi * 100.0 / parking.capienza)}% disponibile
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <h6>Disposizione Posti</h6>
                            ${slotsHtml}
                        </div>
                    `;
                } else {
                    content.innerHTML = '<div class="alert alert-danger">Errore nel caricamento dei dettagli</div>';
                }
            } catch (error) {
                console.error('Error loading parking details:', error);
                content.innerHTML = '<div class="alert alert-danger">Errore di connessione</div>';
            }
        }

        function showDirections(parkingId) {
            // This would integrate with a mapping service
            app.showAlert('Funzione indicazioni stradali non ancora implementata', 'info');
        }
    </script>
    
    <style>
        .bg-light-success { background-color: #d4edda !important; }
        .bg-light-warning { background-color: #fff3cd !important; }
        .bg-light-danger { background-color: #f8d7da !important; }
    </style>
}
