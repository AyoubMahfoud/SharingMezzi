@page
@model SharingMezzi.Web.Pages.TripsModel
@using SharingMezzi.Web.Models
@{
    ViewData["Title"] = "Le mie corse";
    Layout = "_Layout";
}

<!-- Hero Section -->
<div class="row mb-4">
    <div class="col-12">
        <div class="hero-section bg-primary text-white rounded p-4">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="display-6 fw-bold mb-2">
                        <i class="fas fa-route me-3"></i>Le mie corse
                    </h1>
                    <p class="lead mb-0">Visualizza lo storico delle tue corse e gli spostamenti</p>
                </div>
                <div class="d-flex gap-2">
                    <button class="btn btn-light" onclick="refreshTrips()">
                        <i class="fas fa-sync-alt me-2"></i>Aggiorna
                    </button>
                    <button class="btn btn-outline-light" onclick="exportTrips()">
                        <i class="fas fa-download me-2"></i>Esporta
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Stats Cards -->
<div class="row mb-4">
    <div class="col-md-3 col-sm-6 mb-3">
        <div class="card text-center h-100 border-0 shadow-sm">
            <div class="card-body">
                <div class="text-primary mb-2">
                    <i class="fas fa-route fa-2x"></i>
                </div>
                <h3 class="card-title text-primary">@Model.Trips.Count</h3>
                <p class="card-text text-muted">Corse Totali</p>
            </div>
        </div>
    </div>
    
    <div class="col-md-3 col-sm-6 mb-3">
        <div class="card text-center h-100 border-0 shadow-sm">
            <div class="card-body">
                <div class="text-success mb-2">
                    <i class="fas fa-clock fa-2x"></i>
                </div>
                <h3 class="card-title text-success">@Model.TotalMinutes</h3>
                <p class="card-text text-muted">Minuti Totali</p>
            </div>
        </div>
    </div>
    
    <div class="col-md-3 col-sm-6 mb-3">
        <div class="card text-center h-100 border-0 shadow-sm">
            <div class="card-body">
                <div class="text-warning mb-2">
                    <i class="fas fa-euro-sign fa-2x"></i>
                </div>
                <h3 class="card-title text-warning">€@Model.TotalCost.ToString("F2")</h3>
                <p class="card-text text-muted">Spesa Totale</p>
            </div>
        </div>
    </div>
    
    <div class="col-md-3 col-sm-6 mb-3">
        <div class="card text-center h-100 border-0 shadow-sm">
            <div class="card-body">
                <div class="text-info mb-2">
                    <i class="fas fa-leaf fa-2x"></i>
                </div>
                <h3 class="card-title text-info">@Model.TotalEcoPoints</h3>
                <p class="card-text text-muted">Punti Eco</p>
            </div>
        </div>
    </div>
</div>

<!-- Error Alert -->
@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-warning alert-dismissible fade show mb-4" role="alert">
        <i class="fas fa-exclamation-triangle me-2"></i>
        <strong>Attenzione:</strong> @Model.ErrorMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- Trip Filters -->
<div class="card mb-4 border-0 shadow-sm">
    <div class="card-body">
        <h5 class="card-title mb-3">
            <i class="fas fa-filter me-2"></i>Filtri
        </h5>
        <div class="row align-items-end">
            <div class="col-md-3">
                <label for="tripStatus" class="form-label">Stato</label>
                <select id="tripStatus" class="form-control" onchange="filterTrips()">
                    <option value="">Tutti</option>
                    <option value="0">In corso</option>
                    <option value="1">Completate</option>
                    <option value="2">Annullate</option>
                </select>
            </div>
            <div class="col-md-3">
                <label for="vehicleType" class="form-label">Tipo Mezzo</label>
                <select id="vehicleType" class="form-control" onchange="filterTrips()">
                    <option value="">Tutti</option>
                    <option value="0">Biciclette</option>
                    <option value="4">E-Bike</option>
                    <option value="1">Scooter</option>
                    <option value="2">Auto</option>
                    <option value="3">Monopattino</option>
                </select>
            </div>
            <div class="col-md-3">
                <label for="dateRange" class="form-label">Periodo</label>
                <select id="dateRange" class="form-control" onchange="filterTrips()">
                    <option value="">Tutti</option>
                    <option value="today">Oggi</option>
                    <option value="week">Questa settimana</option>
                    <option value="month">Questo mese</option>
                </select>
            </div>
            <div class="col-md-3">
                <button class="btn btn-primary w-100" onclick="applyFilters()">
                    <i class="fas fa-search me-2"></i>Applica Filtri
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Trips List -->
<div class="card border-0 shadow-sm">
    <div class="card-header bg-white border-0">
        <div class="d-flex justify-content-between align-items-center">
            <h5 class="mb-0">
                <i class="fas fa-list me-2"></i>Storico Corse
            </h5>
            <div class="d-flex gap-2">
                <button class="btn btn-sm btn-outline-secondary" onclick="clearFilters()">
                    <i class="fas fa-times me-1"></i>Pulisci
                </button>
            </div>
        </div>
    </div>
    
    <div class="card-body p-0">
        @if (Model.Trips?.Any() == true)
        {
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>Data</th>
                            <th>Mezzo</th>
                            <th>Durata</th>
                            <th>Costo</th>
                            <th>Stato</th>
                            <th>Punti Eco</th>
                            <th>Azioni</th>
                        </tr>
                    </thead>
                    <tbody id="tripsTable">
                        @foreach (var trip in Model.Trips)
                        {
                            <tr class="trip-row" 
                                data-status="@((int)trip.Stato)"
                                data-vehicle-type="@((int)(trip.Mezzo?.Tipo ?? VehicleType.Bicicletta))"
                                data-date="@trip.Inizio.ToString("yyyy-MM-dd")">
                                <td>
                                    <div class="d-flex flex-column">
                                        <strong>@trip.Inizio.ToString("dd/MM/yyyy")</strong>
                                        <small class="text-muted">@trip.Inizio.ToString("HH:mm")</small>
                                    </div>
                                </td>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <i class="fas fa-@(trip.Mezzo?.Tipo == VehicleType.Bicicletta ? "bicycle" : trip.Mezzo?.Tipo == VehicleType.Scooter ? "motorcycle" : trip.Mezzo?.Tipo == VehicleType.EBike ? "bicycle" : "car") me-2 text-primary"></i>
                                        <span>@(trip.Mezzo?.Modello ?? "N/A")</span>
                                    </div>
                                </td>
                                <td>
                                    <span class="badge bg-info">@trip.DurataMinuti min</span>
                                </td>
                                <td>
                                    <strong class="text-success">€@trip.CostoTotale.ToString("F2")</strong>
                                </td>
                                <td>
                                    @{
                                        var statusClass = trip.Stato switch
                                        {
                                            TripStatus.InCorso => "bg-warning",
                                            TripStatus.Completata => "bg-success",
                                            TripStatus.Annullata => "bg-danger",
                                            _ => "bg-secondary"
                                        };
                                        var statusText = trip.Stato switch
                                        {
                                            TripStatus.InCorso => "In corso",
                                            TripStatus.Completata => "Completato",
                                            TripStatus.Annullata => "Annullato",
                                            _ => "Sconosciuto"
                                        };
                                    }
                                    <span class="badge @statusClass">@statusText</span>
                                </td>
                                <td>
                                    @if (trip.PuntiEcoAssegnati.HasValue)
                                    {
                                        <span class="badge bg-success">
                                            <i class="fas fa-leaf me-1"></i>@trip.PuntiEcoAssegnati
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group btn-group-sm">
                                        <button class="btn btn-outline-primary" onclick="viewTripDetails(@trip.Id)" title="Dettagli">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                        @if (trip.Stato == TripStatus.InCorso)
                                        {
                                            <button class="btn btn-outline-warning" onclick="endTrip(@trip.Id)" title="Termina">
                                                <i class="fas fa-stop"></i>
                                            </button>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-route fa-3x text-muted mb-3"></i>
                <h5 class="text-muted">Nessuna corsa trovata</h5>
                <p class="text-muted">Inizia a usare i nostri servizi per vedere qui le tue corse</p>
                <a href="/Vehicles" class="btn btn-primary">
                    <i class="fas fa-bicycle me-2"></i>Trova un mezzo
                </a>
            </div>
        }
    </div>
</div>

<!-- Trip Details Modal -->
<div class="modal fade" id="tripDetailsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-info-circle me-2"></i>Dettagli Corsa
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="tripDetailsContent">
                <!-- Content will be loaded dynamically -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Chiudi</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Filter functionality
        function filterTrips() {
            const statusFilter = document.getElementById('tripStatus').value;
            const vehicleFilter = document.getElementById('vehicleType').value;
            const dateFilter = document.getElementById('dateRange').value;
            
            const rows = document.querySelectorAll('.trip-row');
            
            rows.forEach(row => {
                const status = row.dataset.status;
                const vehicleType = row.dataset.vehicleType;
                const date = row.dataset.date;
                
                let showRow = true;
                
                // Status filter
                if (statusFilter && status !== statusFilter) {
                    showRow = false;
                }
                
                // Vehicle type filter
                if (vehicleFilter && vehicleType !== vehicleFilter) {
                    showRow = false;
                }
                
                // Date filter
                if (dateFilter) {
                    const today = new Date().toISOString().split('T')[0];
                    const tripDate = new Date(date);
                    
                    switch (dateFilter) {
                        case 'today':
                            if (date !== today) showRow = false;
                            break;
                        case 'week':
                            const weekAgo = new Date();
                            weekAgo.setDate(weekAgo.getDate() - 7);
                            if (tripDate < weekAgo) showRow = false;
                            break;
                        case 'month':
                            const monthAgo = new Date();
                            monthAgo.setMonth(monthAgo.getMonth() - 1);
                            if (tripDate < monthAgo) showRow = false;
                            break;
                    }
                }
                
                row.style.display = showRow ? 'table-row' : 'none';
            });
        }
        
        function applyFilters() {
            filterTrips();
        }
        
        function clearFilters() {
            document.getElementById('tripStatus').value = '';
            document.getElementById('vehicleType').value = '';
            document.getElementById('dateRange').value = '';
            filterTrips();
        }
        
        function refreshTrips() {
            location.reload();
        }
        
        function exportTrips() {
            // TODO: Implement export functionality
            alert('Funzionalità di esportazione in sviluppo');
        }
        
        function viewTripDetails(tripId) {
            // TODO: Implement trip details view
            alert('Funzionalità di visualizzazione dettagli in sviluppo');
        }
        
        function endTrip(tripId) {
            if (confirm('Sei sicuro di voler terminare questa corsa?')) {
                // TODO: Implement trip ending
                alert('Funzionalità di terminazione corsa in sviluppo');
            }
        }
        
        // Initialize filters on page load
        document.addEventListener('DOMContentLoaded', function() {
            // Set default filters if needed
        });
    </script>
}
